:: quicksort, (arr, p, r) => (if ([p] < [r])
                                 run{ q::[partition]([arr], [p], [r]),
                                         [quicksort]([arr], [p], ([q][result] - 1)),
                                         [quicksort]([arr], ([q][result] + 1), [r])})
:: partition, (arr, p, r) => run{ x::[arr][[r]],
                                  i::([p] - 1),
                                     |([p], ([r] - 1)) : (j) => (if ([arr][j] <= [x])
                                                                    run{ (i + 1) -> i,
                                                                         (swap [arr] [i] [j])})|,
                                     (swap [arr] ([i] + 1) [r]),
                                  result::([i] + 1)}

:: n, (read)
:: vals, |[n] : () => (read)|
[quicksort]([vals], 1, [n])
|[vals] : (val) => (write [val])|
